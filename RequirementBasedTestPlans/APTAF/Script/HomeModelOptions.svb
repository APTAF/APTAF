'USEUNIT DatabaseFunctions
'USEUNIT tabHome
'USEUNIT Main





''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'------------------------------------------------------------------------------------**/
' Summary: This function allows for use of the "General model options " dialog   
' Remarks:
' Parameters:
'           intDbTestRow:   Input Test Row to use</param>
'           objNameMapping: TestComplete name mapping for the app.
'           objRow:         General model options table row object
'           strOpenDialog:  By shortcut key or by Ribbon click 
' Author:   Bismah Khalid 
' Date:     7/2018
'/*--------------+---------------+---------------+---------------+---------------+------*/

Sub GeneralOptions (ObjNameMapping, objRow, strOpenDialog, strHotKey)
'''''''''''''''''''''''''''''''''''
  Set ObjNameMapping = Aliases.autopipe

'''''''''''''''''''''''''''''''''''''''''''''''''''''
set dlgGeneralOptions = objNameMapping.dlgGeneralOptions


dim strProjectID1 : strProjectID1 = objRow.item("strProjectID1")
dim strProjectID2 :strProjectID2 = objRow.item("strProjectID2")
dim strPreparedBy :strPreparedBy = objRow.item("strPreparedBy")
dim strCheckedBy :strCheckedBy = objRow.item("strCheckedBy")
dim str1stApprover :str1stApprover = objRow.item("str1stApprover")
dim str2ndApprover:str2ndApprover= objRow.item("str2ndApprover")
dim drpPipingCode:drpPipingCode= objRow.item("drpPipingCode")
dim drpEdition:drpEdition= objRow.item("drpEdition")
dim chkAppendixP:chkAppendixP= objRow.item("chkAppendixP")
dim chkHDPE:chkHDPE= objRow.item("chkHDPE")
dim chkB31J:chkB31J= objRow.item("chkB31J")
dim strLifeTime:strLifeTime= objRow.item("strLifeTime")
dim chkLifeTimeMonitoringSystem:chkLifeTimeMonitoringSystem= objRow.item("chkLifeTimeMonitoringSystem")
dim drpInputUnit:drpInputUnit= objRow.item("drpInputUnit")
dim drpOutputUnit:drpOutputUnit= objRow.item("drpOutputUnit")
dim drpVerticalAxisDirection:drpVerticalAxisDirection= objRow.item("drpVerticalAxisDirection")
dim strAmbientTemperature:strAmbientTemperature= objRow.item("strAmbientTemperature")
Dim drpLibraryComponent:drpLibraryComponent= objRow.item("drpLibraryComponent")
dim drpLibraryMaterial:drpLibraryMaterial= objRow.item("drpLibraryMaterial")
Dim drpSIFCode:drpSIFCode= objRow.item("drpSIFCode")
Dim drpSIFEdition:drpSIFEdition= objRow.item("drpSIFEdition")
Dim intThermalPressureCases :intThermalPressureCases = objRow.item("intThermalPressureCases")


    Select Case strOpenDialog
        Case "Shortcut"
          objNameMapping.wndAutoPIPE.Keys(strHotkey)
        Case "Ribbon"
            ' Ribbon is not accessable 
    End Select


if( strProjectID1 <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgGeneralOptions.fldProjectID1.Keys(strProjectID1)
         
          Log.Message("Entered in the strProjectID1  field")
        End If
    End If
''''''''''''''''

if( strProjectID2 <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgGeneralOptions.fldProjectID2.Keys(strProjectID2)
         
          Log.Message("Entered in the strProjectID2  field")
        End If
    End If
''''''''''''''''''
if( strPreparedBy <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgGeneralOptions.fldPreparedBy.Keys(strPreparedBy)
         
          Log.Message("Entered in the strPreparedBy  field")
        End If
    End If
''''''''''''''''''''''''''''''''''''''
if( strCheckedBy <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgGeneralOptions.fldCheckedBy.Keys(strCheckedBy)
         
          Log.Message("Entered in the strCheckedBy  field")
        End If
    End If
''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''str1stApprover
if( str1stApprover <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgGeneralOptions.fld1stApprover.Keys(str1stApprover)
         
          Log.Message("Entered in the str1stApprover  field")
        End If
    End If
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''str2ndApprover
if( str2ndApprover <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgGeneralOptions.fld2ndApprover.Keys(str2ndApprover)
         
          Log.Message("Entered in the str2ndApprover  field")
        End If
    End If
''''''''''''''''''''''''''''''''''''''''''

''''''''''''''drpPipingCode
If (drpPipingCode <> "NA") Then
       ' Write to  field
       ' If(objNameMapping.WaitAliasChild("dlgWarning", 600).WaitProperty("Exists", true, 10)) Then
          If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
          'If(NameMapping.Sys.autopipe.dlgGeneralOptions.drpdwnNominalDiameter.Enabled) Then
          dlgGeneralOptions.drpdwnPipingCode.Click()
          objNameMapping.lstItems.ClickItem(drpPipingCode)

          Log.Message("Entered  field")
        End If
    End If
   'End If
   ' End If
''''''''''''''''''''''''''
''''''''drpEdition
If (drpEdition <> "NA") Then
       ' Write to  field
       ' If(objNameMapping.WaitAliasChild("dlgWarning", 600).WaitProperty("Exists", true, 10)) Then
          If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
          'If(NameMapping.Sys.autopipe.dlgGeneralOptions.drpdwnNominalDiameter.Enabled) Then
          dlgGeneralOptions.drpdwnEdition.Click()
          objNameMapping.lstItems.ClickItem(drpdwnEdition)

          Log.Message("Entered  field")
        End If
    End If
   'End If
   ' End If
'''''''''''''''''''''''''''chkAppendixP
'''''chkAppendixP
   If(chkAppendixP  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgpipeprop", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgGeneralOptions.chkboxAppendixP.Exists) Then
        if(NameMapping.Sys.autopipe.dlgGeneralOptions.chkboxAppendixP.Enabled) Then
          dlgGeneralOptions.chkboxAppendixP.Click()
          Log.Message("Set 'chkboxAppendixP' checkbox")
        End If
        End If
        End If
        
        ''''''''''''chkHDPE
 If(chkHDPE  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgpipeprop", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgGeneralOptions.chkboxHDPE.Exists) Then
        if(NameMapping.Sys.autopipe.dlgGeneralOptions.chkboxHDPE.Enabled) Then
          dlgGeneralOptions.chkboxHDPE.Click()
          Log.Message("Set 'chkboxHDPE' checkbox")
        End If
        End If
        End If

     '''''''''''''chkB31J
       If(chkB31J  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgpipeprop", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgGeneralOptions.chkboxB31J.Exists) Then
        if(NameMapping.Sys.autopipe.dlgGeneralOptions.chkboxB31J.Enabled) Then
          dlgGeneralOptions.chkboxB31J.Click()
          Log.Message("Set 'chkB31J' checkbox")
        End If
        End If
        End If
        
        
 ''''''''''''''''''''''strLifeTime
 if( strLifeTime <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgGeneralOptions.fldLifeTime.Keys(strLifeTime)
         
          Log.Message("Entered in the strLifeTime  field")
        End If
    End If
    
    
   ''''''''''''''''''''''chkLifeTimeMonitoringSystem
    If(chkLifeTimeMonitoringSystem  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgpipeprop", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgGeneralOptions.chkboxLifeTimeMonitoringSystem.Exists) Then
        if(NameMapping.Sys.autopipe.dlgGeneralOptions.chkboxLifeTimeMonitoringSystem.Enabled) Then
          dlgGeneralOptions.chkboxLifeTimeMonitoringSystem.Click()
          Log.Message("Set 'chkboxLifeTimeMonitoringSystem' checkbox")
        End If
        End If
        End If
   
  '''''''''''''''drpEdition  
        If (drpEdition <> "NA") Then
       ' Write to  field
       ' If(objNameMapping.WaitAliasChild("dlgWarning", 600).WaitProperty("Exists", true, 10)) Then
          If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
          'If(NameMapping.Sys.autopipe.dlgGeneralOptions.drpdwnNominalDiameter.Enabled) Then
          dlgGeneralOptions.drpdwnEdition.Click()
          objNameMapping.lstItems.ClickItem(drpdwnEdition)

          Log.Message("Entered  field")
        End If
    End If
   'End If
   ' End If
   
   '''''''''''drpInputUnit
    If (drpInputUnit <> "NA") Then
       ' Write to  field
       ' If(objNameMapping.WaitAliasChild("dlgWarning", 600).WaitProperty("Exists", true, 10)) Then
          If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
          'If(NameMapping.Sys.autopipe.dlgGeneralOptions.drpdwpInputUnit.Enabled) Then
          dlgGeneralOptions.drpdwpInputUnit.Click()
          objNameMapping.lstItems.ClickItem(drpdwpInputUnit)

          Log.Message("Entered drpdwpInputUnit field")
        End If
    End If
   'End If
   ' End If
   '''''''''''''''''drpOutputUnit
   If (drpOutputUnit <> "NA") Then
       ' Write to  field
       ' If(objNameMapping.WaitAliasChild("dlgWarning", 600).WaitProperty("Exists", true, 10)) Then
          If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
          'If(NameMapping.Sys.autopipe.dlgGeneralOptions.drpdwnOutputUnit.Enabled) Then
          dlgGeneralOptions.drpdwnOutputUnit.Click()
          objNameMapping.lstItems.ClickItem(drpOutputUnit)

          Log.Message("Entered drpOutputUnit field")
        End If
    End If
   'End If
   ' End If
  '''''''''''''''''drpVerticalAxisDirection
  
    If (drpVerticalAxisDirection <> "NA") Then
       ' Write to  field
       ' If(objNameMapping.WaitAliasChild("dlgWarning", 600).WaitProperty("Exists", true, 10)) Then
          If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
          'If(NameMapping.Sys.autopipe.dlgGeneralOptions.drpdwnVerticalAxisDirection.Enabled) Then
          dlgGeneralOptions.drpdwnVerticalAxisDirection.Click()
          objNameMapping.lstItems.ClickItem(drpVerticalAxisDirection)

          Log.Message("Entered drpVerticalAxisDirection field")
        End If
    End If
   'End If
   ' End If
   
   
   '''''''intThermalPressureCases
   if( intThermalPressureCases <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgGeneralOptions.fldThermalPressureCases.Keys(intThermalPressureCases)
         
          Log.Message("Entered in the strAmbientTemperature  field")
        End If
    End If
   
   
   ''''''''''''''''strAmbientTemperature
    if( strAmbientTemperature <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgGeneralOptions.fldAmbientTemperature.Keys(strAmbientTemperature)
         
          Log.Message("Entered in the strAmbientTemperature  field")
        End If
    End If
    
   ''''''''''''drpLibraryComponent
    If (drpLibraryComponent <> "NA") Then
       ' Write to  field
       ' If(objNameMapping.WaitAliasChild("dlgWarning", 600).WaitProperty("Exists", true, 10)) Then
          If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
          If(NameMapping.Sys.autopipe.dlgGeneralOptions.drpdwnLibraryComponent.Enabled) Then
           If(NameMapping.Sys.autopipe.lstItems.Visible) Then
          dlgGeneralOptions.drpdwnLibraryComponent.Click()
          objNameMapping.lstItems.ClickItem(drpLibraryComponent)

          Log.Message("Entered drpLibraryComponent field")
        End If
    End If
   End If
   End If

   '''''''drpdwnLibraryMaterial
   
     If (drpdwnLibraryMaterial <> "NA") Then
       ' Write to  field
       ' If(objNameMapping.WaitAliasChild("dlgWarning", 600).WaitProperty("Exists", true, 10)) Then
          If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
           If(NameMapping.Sys.autopipe.lstItems.Visible) Then
          'If(NameMapping.Sys.autopipe.dlgGeneralOptions.drpdwnLibraryMaterial.Enabled) Then
          dlgGeneralOptions.drpdwnLibraryMaterial.Click()
          objNameMapping.lstItems.ClickItem(drpLibraryMaterial)

          Log.Message("Entered drpdwnLibraryMaterial field")
        End If
    End If
   End If
   ' End If
   
   ''''''''''''''drpSIFCode
     If (drpSIFCode <> "NA") Then
       ' Write to  field
       ' If(objNameMapping.WaitAliasChild("dlgWarning", 600).WaitProperty("Exists", true, 10)) Then
          If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
          If(NameMapping.Sys.autopipe.dlgGeneralOptions.drpdwnSIFCode.Enabled) Then
          dlgGeneralOptions.drpdwnSIFCode.Click()
          objNameMapping.lstItems.ClickItem(drpSIFCode)

          Log.Message("Entered drpdwnLibraryMaterial field")
        End If
    End If
   'End If
   End If
   
   '''''''''''''''''''drpSIFEdition
   If (drpSIFEdition <> "NA") Then
       ' Write to  field
       ' If(objNameMapping.WaitAliasChild("dlgWarning", 600).WaitProperty("Exists", true, 10)) Then
          If(NameMapping.Sys.autopipe.dlgGeneralOptions.Exists) Then
          If(NameMapping.Sys.autopipe.dlgGeneralOptions.drpdwnSIFEdition.Enabled) Then
          dlgGeneralOptions.drpdwnSIFEdition.Click()
          objNameMapping.lstItems.ClickItem(drpSIFEdition)

          Log.Message("Entered drpSIFEdition field")
        End If
    End If
   End If
   ' End If
   
   '''''''''''''''''
   dlgGeneralOptions.btnOK.click()
   
End Sub
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'------------------------------------------------------------------------------------**/
' Summary: This function allows for use of the "Edit model options " dialog   
' Remarks:
' Parameters:
'           intDbTestRow:   Input Test Row to use</param>
'           objNameMapping: TestComplete name mapping for the app.
'           objRow:         Edit model options table row object
'           strOpenDialog:  By shortcut key or by Ribbon click 
' Author:   Bismah Khalid 
' Date:     7/2018
'/*--------------+---------------+---------------+---------------+---------------+------*/

sub EditOptions(objNameMapping, objRow,strOpenDialog, strHotKey)
  
''''''''''''''' Delete
Set objNameMapping = Aliases.autopipe
'''''''''''''''''''
    set dlgEditModelOptions = objNameMapping.dlgEditModelOptions
    Dim intDigitsAfterDecimal : intDigitsAfterDecimal = objRow.item("intDigitsAfterDecimal")
    Dim cmbDefaultPointNameFormat : cmbDefaultPointNameFormat = objRow.item("cmbDefaultPointNameFormat")
Dim intDefaultPointNameOffset : intDefaultPointNameOffset = objRow.item("intDefaultPointNameOffset")
Dim chkReplaceAllPointNames : chkReplaceAllPointNames = objRow.item("chkReplaceAllPointNames")
Dim chkUseFeetInchesDisplay : chkUseFeetInchesDisplay = objRow.item("chkUseFeetInchesDisplay")
Dim intMassPointsPerSpan : intMassPointsPerSpan = objRow.item("intMassPointsPerSpan")
Dim intCutoffFrequency : intCutoffFrequency = objRow.item("intCutoffFrequency")
Dim chkuseCorrodedThickness : chkuseCorrodedThickness = objRow.item("chkuseCorrodedThickness")
Dim chkIgnoreFlangeEffect : chkIgnoreFlangeEffect = objRow.item("chkIgnoreFlangeEffect")
Dim intDistanceLDFromFlange : intDistanceLDFromFlange = objRow.item("intDistanceLDFromFlange")
Dim chkIncludeBourdonRotationalEffect : chkIncludeBourdonRotationalEffect = objRow.item("chkIncludeBourdonRotationalEffect")
Dim cmbboxPipeRadius : cmbboxPipeRadius = objRow.item("cmbboxPipeRadius")
Dim intCoincidentNodeTolerance : intCoincidentNodeTolerance = objRow.item("intCoincidentNodeTolerance")
Dim intlevelsOfUndo : intlevelsOfUndo = objRow.item("intlevelsOfUndo")
Dim intRigidPipeStiffnessFactor : intRigidPipeStiffnessFactor = objRow.item("intRigidPipeStiffnessFactor")
Dim intFlangeBoltNutWeightFactor : intFlangeBoltNutWeightFactor = objRow.item("intFlangeBoltNutWeightFactor") 
Dim chkApplyPressureCorrection : chkApplyPressureCorrection = objRow.item("chkApplyPressureCorrection") 
Dim chkSuppressStoringTime : chkboxSuppressStoringTime = objRow.item("chkboxSuppressStoringTime") 
Dim chkUpdateIds : chkUpdateIds = objRow.item("chkUpdateIds") 
Dim strSupportRigidStiffnessT : strSupportRigidStiffnessT = objRow.item("strSupportRigidStiffnessT")  
Dim strSupportRigidStiffnessR : strSupportRigidStiffnessR = objRow.item("strSupportRigidStiffnessR")  
Dim strAnchorRigidStiffnessT : strAnchorRigidStiffnessT = objRow.item("strAnchorRigidStiffnessT")
Dim strAnchorRigidStiffnessR : strAnchorRigidStiffnessR = objRow.item("strAnchorRigidStiffnessR")

    Select Case strOpenDialog
        Case "Shortcut"
          objNameMapping.wndAutoPIPE.Keys(strHotkey)
        Case "Ribbon"
            ' Ribbon is not accessable 
    End Select
''''intDigitsAfterDecimal
if( intDigitsAfterDecimal <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgEditModelOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgEditModelOptions.fldDigitsAfterDecimal.Keys(intDigitsAfterDecimal)
         
          Log.Message("Entered in the intDigitsAfterDecimal  field")
        End If
    End If
    
''''''cmbDefaultPointNameFormat
if(cmbDefaultPointNameFormat <> "NA") Then
If(NameMapping.Sys.autopipe.dlgEditModelOptions.cmbboxDefaultPointNameFormat.Enabled) Then
if(NameMapping.Sys.autopipe.dlgEditModelOptions.cmbboxDefaultPointNameFormat.Exists) Then
    dlgEditModelOptions.cmbboxDefaultPointNameFormat.click()
    objNameMapping.lstItems.ClickItem(cmbboxDefaultPointNameFormat) 
'    if(NameMapping.Sys.autopipe.dlgWarning.Exists) Then
'    objNameMapping.dlgWarning.Close()
    end If
    end If
    End If
    'end if 
    '''      

''''intDefaultPointNameOffset
if( intDefaultPointNameOffset <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgEditModelOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgEditModelOptions.fldDigitsAfterDecimal.Keys(intDefaultPointNameOffset)
         
          Log.Message("Entered in the intDefaultPointNameOffset  field")
        End If
    End If



'''''''chkReplaceAllPointNames
 If(chkReplaceAllPointNames  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgpipeprop", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxReplaceAllPointNames.Exists) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxReplaceAllPointNames.Enabled) Then
          dlgEditModelOptions.chkboxReplaceAllPointNames.Click()
          Log.Message("Set 'chkReplaceAllPointNames' checkbox")
        End If
        End If
        End If

'''' chkUseFeetInchesDisplay 
If(chkUseFeetInchesDisplay  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgpipeprop", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxUseFeetInchesDisplay.Exists) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxUseFeetInchesDisplay.Enabled) Then
          dlgEditModelOptions.chkboxUseFeetInchesDisplay.Click()
          Log.Message("Set 'chkUseFeetInchesDisplay' checkbox")
        End If
        End If
        End If


''''' intMassPointsPerSpan 
if( intMassPointsPerSpan <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgEditModelOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgEditModelOptions.fldMassPointsPerSpan.Keys(intMassPointsPerSpan)
         
          Log.Message("Entered in the intMassPointsPerSpan  field")
        End If
    End If


''' intCutoffFrequency
if( intCutoffFrequency <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgEditModelOptions.Exists) Then
        if(NameMapping.sys.autopipe.dlgEditModelOptions.fldCutoffFrequency.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgEditModelOptions.fldCutoffFrequency.Keys(intCutoffFrequency)
         
          Log.Message("Entered in the intCutoffFrequency  field")
        End If
    End If
    End If



'''' chkuseCorrodedThickness
If(chkuseCorrodedThickness  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgpipeprop", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxuseCorrodedThickness.Exists) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxuseCorrodedThickness.Enabled) Then
          dlgEditModelOptions.chkboxuseCorrodedThickness.Click()
          Log.Message("Set 'chkuseCorrodedThickness' checkbox")
        End If
        End If
        End If


'chkIgnoreFlangeEffect 
If(chkIgnoreFlangeEffect  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgpipeprop", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxIgnoreFlangeEffect.Exists) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxIgnoreFlangeEffect.Enabled) Then
          dlgEditModelOptions.chkboxIgnoreFlangeEffect.Click()
          Log.Message("Set 'chkIgnoreFlangeEffect' checkbox")
        End If
        End If
        End If

''' intDistanceLDFromFlange 
if( intDistanceLDFromFlange <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgEditModelOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgEditModelOptions.fldDistanceLDFromFlange.Keys(intDistanceLDFromFlange)
         
          Log.Message("Entered in the intDistanceLDFromFlange  field")
        End If
    End If

'''' chkIncludeBourdonRotationalEffect
If(chkIncludeBourdonRotationalEffect  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgpipeprop", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxIncludeBourdonRotationalEffect.Exists) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxIncludeBourdonRotationalEffect.Enabled) Then
          dlgEditModelOptions.chkboxIncludeBourdonRotationalEffect.Click()
          Log.Message("Set 'chkIncludeBourdonRotationalEffect' checkbox")
        End If
        End If
        End If
       
'''''cmbboxPipeRadius 
if(cmbboxPipeRadius <> "NA") Then
If(NameMapping.Sys.autopipe.dlgEditModelOptions.cmbboxPipeRadius.Enabled) Then
if(NameMapping.Sys.autopipe.dlgEditModelOptions.cmbboxPipeRadius.Exists) Then
    dlgEditModelOptions.cmbboxPipeRadius.click()
    objNameMapping.lstItems.ClickItem(cmbboxPipeRadius) 
'    if(NameMapping.Sys.autopipe.dlgWarning.Exists) Then
'    objNameMapping.dlgWarning.Close()
    end If
    end If
    End If
    'end if 
    
    
'''' intCoincidentNodeTolerance
if( intCoincidentNodeTolerance <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgEditModelOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgEditModelOptions.fldCoincidentNodeTolerance.Keys(intCoincidentNodeTolerance)
         
          Log.Message("Entered in the intCoincidentNodeTolerance  field")
        End If
    End If


''''''''''''intlevelsOfUndo
if( intlevelsOfUndo <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgEditModelOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgEditModelOptions.fldlevelsOfUndo.Keys(intlevelsOfUndo)
         
          Log.Message("Entered in the intlevelsOfUndo  field")
        End If
    End If


'''' intRigidPipeStiffnessFactor
if( intRigidPipeStiffnessFactor <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgEditModelOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgEditModelOptions.fldRigidPipeStiffnessFactor.Keys(intRigidPipeStiffnessFactor)
         
          Log.Message("Entered in the intRigidPipeStiffnessFactor  field")
        End If
    End If
    
    

''''intFlangeBoltNutWeightFactor
if( intFlangeBoltNutWeightFactor <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgEditModelOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgEditModelOptions.fldFlangeBoltNutWeightFactor.Keys(intFlangeBoltNutWeightFactor)
         
          Log.Message("Entered in the intFlangeBoltNutWeightFactor  field")
        End If
    End If


'''' chkApplyPressureCorrection 
If(chkApplyPressureCorrection  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgpipeprop", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxApplyPressureCorrection.Exists) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxApplyPressureCorrection.Enabled) Then
          dlgEditModelOptions.chkboxApplyPressureCorrection.Click()
          Log.Message("Set 'chkApplyPressureCorrection' checkbox")
        End If
        End If
        End If
 
'''' chkSuppressStoringTime 
If(chkSuppressStoringTime  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgpipeprop", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxSuppressStoringTime.Exists) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxSuppressStoringTime.Enabled) Then
          dlgEditModelOptions.chkboxSuppressStoringTime.Click()
          Log.Message("Set 'chkSuppressStoringTime' checkbox")
        End If
        End If
        End If

'''''chkUpdateIds 
If(chkUpdateIds  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgpipeprop", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxUpdateIds.Exists) Then
        if(NameMapping.Sys.autopipe.dlgEditModelOptions.chkboxUpdateIds.Enabled) Then
          dlgEditModelOptions.chkboxUpdateIds.Click()
          Log.Message("Set 'chkUpdateIds' checkbox")
        End If
        End If
        End If


'''' strSupportRigidStiffnessT 
 if( strSupportRigidStiffnessT <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgEditModelOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgEditModelOptions.fldSupportRigidStiffnessT.Keys(strSupportRigidStiffnessT)
         
          Log.Message("Entered in the strSupportRigidStiffnessT  field")
        End If
    End If
    

'''' strSupportRigidStiffnessR 
if( strSupportRigidStiffnessR <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgEditModelOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgEditModelOptions.fldSupportRigidStiffnessR.Keys(strSupportRigidStiffnessR)
         
          Log.Message("Entered in the strSupportRigidStiffnessR  field")
        End If
    End If
    
'''' strAnchorRigidStiffnessT 
if( strAnchorRigidStiffnessT <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgEditModelOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgEditModelOptions.fldAnchorRigidStiffnessT.Keys(strAnchorRigidStiffnessT)
         
          Log.Message("Entered in the strAnchorRigidStiffnessT  field")
        End If
    End If

''''strAnchorRigidStiffnessR 

 if( strAnchorRigidStiffnessR <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgEditModelOptions.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgEditModelOptions.fldAnchorRigidStiffnessR.Keys(strAnchorRigidStiffnessR)
         
          Log.Message("Entered in the strAnchorRigidStiffnessR  field")
        End If
    End If

End Sub
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'------------------------------------------------------------------------------------**/
' Summary: This function allows for use of the "Result" dialog   
' Remarks:
' Parameters:
'           intDbTestRow:   Input Test Row to use</param>
'           objNameMapping: TestComplete name mapping for the app.
'           objRow:         Result table row object
'           strOpenDialog:  By shortcut key or by Ribbon click 
' Author:   Bismah Khalid 
' Date:     8/2018
'/*--------------+---------------+---------------+---------------+---------------+------*/
sub Result (objNameMapping, objRow, strOpenDialog, strHotKey)
   
'''''''''''''''''''''''''''''''''
  Set ObjNameMapping = Aliases.autopipe

'''''''''''''''''''''''''''''''''''''''''''''''''''''
set dlgResult = objNameMapping.dlgResult

Dim strFormatNodeCombin : strFormatNodeCombin =  objRow.item("strFormatNodeCombin")
Dim intDisplacementScale : intDisplacementScale =  objRow.item("intDisplacementScale")
Dim strForceGlobalLocal: strForceGlobalLocal =  objRow.item("strForceGlobalLocal")
Dim intRangeReductionFactor:intRangeReductionFactor =  objRow.item("intRangeReductionFactor")
Dim chkboxIncludeAxialForce: chkboxIncludeAxialForce =  objRow.item("chkboxIncludeAxialForce")
Dim intWeldEffFacEi: intWeldEffFacEi =  objRow.item("intWeldEffFacEi")
Dim chkboxOverwriteOutputFile:chkboxOverwriteOutputFile =  objRow.item("chkboxOverwriteOutputFile")
Dim intYfactor:intYfactor =  objRow.item("intYfactor")
Dim chkboxUseNominalThickness:chkboxUseNominalThickness =  objRow.item("chkboxUseNominalThickness")
Dim intDesignFactorf: intDesignFactorf =  objRow.item("intDesignFactorf")
Dim chkboxUseNomforHoop:chkboxUseNomforHoop =  objRow.item("chkboxUseNomforHoop")
Dim strTemperDeratingFactor :strTemperDeratingFactor =  objRow.item("strTemperDeratingFactor")
Dim chkboxSetSusSIF1nobends:chkboxSetSusSIF1nobends =  objRow.item("chkboxSetSusSIF1nobends")
Dim intDesignPressureFactor:intDesignPressureFactor =  objRow.item("intDesignPressureFactor")
Dim chkboxSetSusOccSIF1:chkboxSetSusOccSIF1 =  objRow.item("chkboxSetSusOccSIF1")
Dim intMinimumStressRatio:intMinimumStressRatio =  objRow.item("intMinimumStressRatio")
Dim chkboxSetSusOccSIF:chkboxSetSusOccSIF = objRow.item("chkboxSetSusOccSIF")
Dim intHoopSafetyFactor:intHoopSafetyFactor = objRow.item("intHoopSafetyFactor")
Dim chkboxIncludeTorsion:chkboxIncludeTorsion =  objRow.item("chkboxIncludeTorsion")
Dim intLongSafetyFactor:intLongSafetyFactor =  objRow.item("intLongSafetyFactor")
Dim chkboxSingleSIFattees:chkboxSingleSIFattees =  objRow.item("chkboxSingleSIFattees")
Dim intShearAllowableFactor:intShearAllowableFactor = objRow.item("intShearAllowableFactor")
Dim chkboxIncludeResultsDesc:chkboxIncludeResultsDesc = objRow.item("chkboxIncludeResultsDesc")
Dim intTotalAllowableFactor:intTotalAllowableFactor = objRow.item("intTotalAllowableFactor")
Dim chkboxIncludeBendOvaling:chkboxIncludeBendOvaling = objRow.item("chkboxIncludeBendOvaling")
Dim intIntermStressPoints:intIntermStressPoints = objRow.item("intIntermStressPoints")
Dim chkboxIncludehoopbending:chkboxIncludehoopbending = objRow.item("chkboxIncludehoopbending")
Dim intNoOfThermalRanges:intNoOfThermalRanges = objRow.item("intNoOfThermalRanges")
Dim strDirectShearNRA:strDirectShearNRA = objRow.item("strDirectShearNRA")
Dim chkboxIncludeMaxRangecomb:chkboxIncludeMaxRangecomb = objRow.item("chkboxIncludeMaxRangecomb")
Dim strTotalStressOctMax:strTotalStressOctMax = objRow.item("strTotalStressOctMax")
Dim chkboxIncAxialPcaseinSus:chkboxIncAxialPcaseinSus = objRow.item("chkboxIncAxialPcaseinSus")
Dim chkboxUsecodecase178:chkboxUsecodecase178 = objRow.item("chkboxUsecodecase178")
Dim chkboxUseAltOccAllowable:chkboxUseAltOccAllowable = objRow.item("chkboxUseAltOccAllowable")
Dim chkboxApplymodulusratio :chkboxApplymodulusratio = objRow.item("chkboxApplymodulusratio")
Dim chkboxApplycircWCfactor :chkboxApplycircWCfactor = objRow.item("chkboxApplycircWCfactor")
Dim chkboxApplyTeeSummation :chkboxApplyTeeSummation = objRow.item("chkboxApplyTeeSummation")
Dim chkboxUseTheoreticalSecMod:chkboxUseTheoreticalSecMod = objRow.item("chkboxUseTheoreticalSecMod")
Dim strSustainMarginYNE:strSustainMarginYNE = objRow.item("strSustainMarginYNE")
Dim intLongPressuePAMN:intLongPressuePAMN = objRow.item("intLongPressuePAMN")
Dim chkboxUseminsustainedmargin:chkboxUseminsustainedmargin = objRow.item("chkboxUseminsustainedmargin")
Dim chkboxShowRigidTeeStress:chkboxShowRigidTeeStress = objRow.item("chkboxShowRigidTeeStress")
Dim chkboxUseForAcceleration:chkboxUseForAcceleration = objRow.item("chkboxUseForAcceleration")
Dim strApplyCSACriteria : strApplyCSACriteria = objRow.item("strApplyCSACriteria")
Dim chkboxUseMinTeeAllowable:chkboxUseMinTeeAllowable = objRow.item("chkboxUseMinTeeAllowable")
Dim chkboxPressCorrForUsrSIF:chkboxPressCorrForUsrSIF = objRow.item("chkboxPressCorrForUsrSIF")
Dim chkboxModalTimestepTeeSum:chkboxModalTimestepTeeSum = objRow.item("chkboxModalTimestepTeeSum")
Dim chkboxUseResultantMethod:chkboxUseResultantMethod = objRow.item("chkboxUseResultantMethod")
Dim intForce:intForce = objRow.item("intForce")
Dim intStress:intStress = objRow.item("intStress")
Dim intDisp:intDisp = objRow.item("intDisp")
Dim intFreq:intFreq = objRow.item("intFreq")

   
   
aqUtils.Delay(2000)

  Select Case strOpenDialog
    Case "Shortcut"
            'aqutils.Delay(200)
            objNameMapping.wndAutoPIPE.Keys(strHotKey)        
    Case "Ribbon"
    ' Ribbon is not accessable 
  End Select 
aqUtils.Delay(2000)
'''''strFormatNodeCombin 
if(strFormatNodeCombin <> "NA") then
        'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldFormatNodeCombin.Keys(strFormatNodeCombin)
         
          Log.Message("Entered in the strFormatNodeCombin field")
        End If
    End If
'
''''intDisplacementScale 
if( intDisplacementScale <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldDisplacementScale.Keys(intDisplacementScale)
         
          Log.Message("Entered in the intDisplacementScale  field")
        End If
    End If

'''' strForceGlobalLocal
if( strForceGlobalLocal <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldForceGlobalLocal.Keys(strForceGlobalLocal)
         
          Log.Message("Entered in the strForceGlobalLocal  field")
        End If
    End If

''' intRangeReductionFactor
if( intRangeReductionFactor <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldRangeReductionFactor.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldRangeReductionFactor.Keys(intRangeReductionFactor)
         
          Log.Message("Entered in the strForceGlobalLocal  field")
        End If
    End If
    End If

'''' chkboxIncludeAxialForce
If(chkboxIncludeAxialForce  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncludeAxialForce.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncludeAxialForce.Enabled) Then
          dlgResult.chkboxIncludeAxialForce.Click()
          Log.Message("Set 'chkboxIncludeAxialForce' checkbox")
        End If
        End If
        End If

''''intWeldEffFacEi
if( intWeldEffFacEi <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldWeldEffFacEi.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldWeldEffFacEi.Keys(intWeldEffFacEi)
         
          Log.Message("Entered in the strForceGlobalLocal  field")
        End If
    End If
    End If



''''chkboxOverwriteOutputFile
If(chkboxOverwriteOutputFile  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxOverwriteOutputFile.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxOverwriteOutputFile.Enabled) Then
          dlgResult.chkboxOverwriteOutputFile.Click()
          Log.Message("Set 'chkboxOverwriteOutputFile' checkbox")
        End If
        End If
        End If


''' intYfactor
if( intYfactor <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldYfactor.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldYfactor.Keys(intWeldEffFacEi)
         
          Log.Message("Entered in the fldYfactor  field")
        End If
    End If
    End If

'''' chkboxUseNominalThickness
If(chkboxUseNominalThickness  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseNominalThickness.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseNominalThickness.Enabled) Then
          dlgResult.chkboxUseNominalThickness.Click()
          Log.Message("Set 'chkboxUseNominalThickness' checkbox")
        End If
        End If
        End If

''''intDesignFactorf
if( intDesignFactorf <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldDesignFactorf.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldDesignFactorf.Keys(intDesignFactorf)
         
          Log.Message("Entered in the fldYfactor  field")
        End If
    End If
    End If
    
    
'''''''''''intYfactor
if( intYfactor <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldYfactor.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldYfactor.Keys(intYfactor)
         
          Log.Message("Entered in the fldYfactor  field")
        End If
    End If
    End If

''' chkboxUseNomforHoop
If(chkboxUseNomforHoop  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseNomforHoop.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseNomforHoop.Enabled) Then
          dlgResult.chkboxUseNomforHoop.Click()
          Log.Message("Set 'chkboxUseNomforHoop' checkbox")
        End If
        End If
        End If
        
'''strTemperDeratingFactor 
if( strTemperDeratingFactor <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldTemperDeratingFactor.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldTemperDeratingFactor.Keys(strTemperDeratingFactor)
         
          Log.Message("Entered in the strTemperDeratingFactor  field")
        End If
    End If
    End If

''' chkboxSetSusSIF1nobends
If(chkboxSetSusSIF1nobends  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxSetSusSIF1nobends.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxSetSusSIF1nobends.Enabled) Then
          dlgResult.chkboxSetSusSIF1nobends.Click()
          Log.Message("Set 'chkboxSetSusSIF1nobends' checkbox")
        End If
        End If
        End If

'''intDesignPressureFactor
if( intDesignPressureFactor <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldDesignPressureFactor.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldDesignPressureFactor.Keys(intDesignPressureFactor)
         
          Log.Message("Entered in the intDesignPressureFactor  field")
        End If
    End If
    End If


''' chkboxSetSusOccSIF1
If(chkboxSetSusOccSIF1  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxSetSusOccSIF1.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxSetSusOccSIF1.Enabled) Then
          dlgResult.chkboxSetSusOccSIF1.Click()
          Log.Message("Set 'chkboxSetSusOccSIF1' checkbox")
        End If
        End If
        End If


'Dim intMinimumStressRatio
if( intMinimumStressRatio <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldMinimumStressRatio.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldMinimumStressRatio.Keys(intDesignPressureFactor)
         
          Log.Message("Entered in the intMinimumStressRatio  field")
        End If
    End If
    End If


''' chkboxSetSusOccSIF
If(chkboxSetSusOccSIF  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxSetSusOccSIF.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxSetSusOccSIF.Enabled) Then
          dlgResult.chkboxSetSusOccSIF.Click()
          Log.Message("Set 'chkboxSetSusOccSIF' checkbox")
        End If
        End If
        End If


''' intHoopSafetyFactor
if( intHoopSafetyFactor <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldHoopSafetyFactor.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldHoopSafetyFactor.Keys(intHoopSafetyFactor)
         
          Log.Message("Entered in the intHoopSafetyFactor  field")
        End If
    End If
    End If

''' chkboxIncludeTorsion
If(chkboxIncludeTorsion  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncludeTorsion.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncludeTorsion.Enabled) Then
          dlgResult.chkboxIncludeTorsion.Click()
          Log.Message("Set 'chkboxIncludeTorsion' checkbox")
        End If
        End If
        End If

'Dim intLongSafetyFactor:intLongSafetyFactor = objRow("intLongSafetyFactor")

''' chkboxSingleSIFattees
If(chkboxSingleSIFattees  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxSingleSIFattees.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxSingleSIFattees.Enabled) Then
          dlgResult.chkboxSingleSIFattees.Click()
          Log.Message("Set 'chkboxSingleSIFattees' checkbox")
        End If
        End If
        End If


''' intShearAllowableFactor
if( intShearAllowableFactor <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldShearAllowableFactor.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldShearAllowableFactor.Keys(intShearAllowableFactor)
         
          Log.Message("Entered in the intShearAllowableFactor  field")
        End If
    End If
    End If

''' chkboxIncludeResultsDesc
If(chkboxIncludeResultsDesc  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncludeResultsDesc.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncludeResultsDesc.Enabled) Then
          dlgResult.chkboxIncludeResultsDesc.Click()
          Log.Message("Set 'chkboxIncludeResultsDesc' checkbox")
        End If
        End If
        End If

''' intTotalAllowableFactor
if( intTotalAllowableFactor <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldTotalAllowableFactor.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldTotalAllowableFactor.Keys(intTotalAllowableFactor)
         
          Log.Message("Entered in the fldTotalAllowableFactor  field")
        End If
    End If
    End If

''' chkboxIncludeBendOvaling
If(chkboxIncludeBendOvaling  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncludeBendOvaling.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncludeBendOvaling.Enabled) Then
          dlgResult.chkboxIncludeBendOvaling.Click()
          Log.Message("Set 'chkboxIncludeBendOvaling' checkbox")
        End If
        End If
        End If


''''intIntermStressPoints
if( intIntermStressPoints <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldIntermStressPoints.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldIntermStressPoints.Keys(intIntermStressPoints)
         
          Log.Message("Entered in the intIntermStressPoints  field")
        End If
    End If
    End If


''' chkboxIncludehoopbending
If(chkboxIncludehoopbending  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncludehoopbending.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncludehoopbending.Enabled) Then
          dlgResult.chkboxIncludehoopbending.Click()
          Log.Message("Set 'chkboxIncludehoopbending' checkbox")
        End If
        End If
        End If



''' intNoOfThermalRanges
if( intNoOfThermalRanges <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldNoOfThermalRanges.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldNoOfThermalRanges.Keys(intNoOfThermalRanges)
         
          Log.Message("Entered in the intNoOfThermalRanges  field")
        End If
    End If
    End If

'''strDirectShearNRA
if( strDirectShearNRA <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldDirectShearNRA.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldDirectShearNRA.Keys(strDirectShearNRA)
         
          Log.Message("Entered in the fldDirectShearNRA  field")
        End If
    End If
    End If

''' chkboxIncludeMaxRangecomb
If(chkboxIncludeMaxRangecomb  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncludeMaxRangecomb.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncludeMaxRangecomb.Enabled) Then
          dlgResult.chkboxIncludeMaxRangecomb.Click()
          Log.Message("Set 'chkboxIncludeMaxRangecomb' checkbox")
        End If
        End If
        End If

'''' strTotalStressOctMax
if( strTotalStressOctMax <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldTotalStressOctMax.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldTotalStressOctMax.Keys(strTotalStressOctMax)
         
          Log.Message("Entered in the strTotalStressOctMax  field")
        End If
    End If
    End If

''' chkboxIncAxialPcaseinSus
If(chkboxIncAxialPcaseinSus  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncAxialPcaseinSus.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxIncAxialPcaseinSus.Enabled) Then
          dlgResult.chkboxIncAxialPcaseinSus.Click()
          Log.Message("Set 'chkboxIncAxialPcaseinSus' checkbox")
        End If
        End If
        End If


''' chkboxUsecodecase178
If(chkboxUsecodecase178  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUsecodecase178.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUsecodecase178.Enabled) Then
          dlgResult.chkboxUsecodecase178.Click()
          Log.Message("Set 'chkboxUsecodecase178' checkbox")
        End If
        End If
        End If

''' chkboxUseAltOccAllowable
If(chkboxUseAltOccAllowable  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseAltOccAllowable.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseAltOccAllowable.Enabled) Then
          dlgResult.chkboxUseAltOccAllowable.Click()
          Log.Message("Set 'chkboxUseAltOccAllowable' checkbox")
        End If
        End If
        End If

''' chkboxApplymodulusratio 
If(chkboxApplymodulusratio  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxApplymodulusratio.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxApplymodulusratio.Enabled) Then
          dlgResult.chkboxApplymodulusratio.Click()
          Log.Message("Set 'chkboxApplymodulusratio' checkbox")
        End If
        End If
        End If


''' chkboxApplycircWCfactor 

If(chkboxApplycircWCfactor  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxApplycircWCfactor.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxApplycircWCfactor.Enabled) Then
          dlgResult.chkboxApplycircWCfactor.Click()
          Log.Message("Set 'chkboxApplycircWCfactor' checkbox")
        End If
        End If
        End If



''' chkboxApplyTeeSummation 
If(chkboxApplyTeeSummation  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxApplyTeeSummation.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxApplyTeeSummation.Enabled) Then
          dlgResult.chkboxApplyTeeSummation.Click()
          Log.Message("Set 'chkboxApplyTeeSummation' checkbox")
        End If
        End If
        End If



'''' chkboxUseTheoreticalSecMod
If(chkboxUseTheoreticalSecMod  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseTheoreticalSecMod.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseTheoreticalSecMod.Enabled) Then
          dlgResult.chkboxUseTheoreticalSecMod.Click()
          Log.Message("Set 'chkboxUseTheoreticalSecMod' checkbox")
        End If
        End If
        End If

''''strSustainMarginYNE
if( strSustainMarginYNE <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldSustainMarginYNE.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldSustainMarginYNE.Keys(strSustainMarginYNE)
         
          Log.Message("Entered in the strSustainMarginYNE  field")
        End If
    End If
    End If

'''' intLongPressuePAMN
if( intLongPressuePAMN <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldLongPressuePAMN.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldLongPressuePAMN.Keys(intLongPressuePAMN)
         
          Log.Message("Entered in the fldLongPressuePAMN  field")
        End If
    End If
    End If


'''' chkboxUseminsustainedmargin
If(chkboxUseminsustainedmargin  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseminsustainedmargin.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseminsustainedmargin.Enabled) Then
          dlgResult.chkboxUseminsustainedmargin.Click()
          Log.Message("Set 'chkboxUseminsustainedmargin' checkbox")
        End If
        End If
        End If
''''chkboxShowRigidTeeStress
If(chkboxShowRigidTeeStress  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxShowRigidTeeStress.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxShowRigidTeeStress.Enabled) Then
          dlgResult.chkboxShowRigidTeeStress.Click()
          Log.Message("Set 'chkboxShowRigidTeeStress' checkbox")
        End If
        End If
        End If
'''' chkboxUseForAcceleration
If(chkboxUseForAcceleration  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseForAcceleration.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseForAcceleration.Enabled) Then
          dlgResult.chkboxUseForAcceleration.Click()
          Log.Message("Set 'chkboxUseForAcceleration' checkbox")
        End If
        End If
        End If


'''strApplyCSACriteria
if( strApplyCSACriteria <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldApplyCSACriteria.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldApplyCSACriteria.Keys(intWeldEffFacEi)
         
          Log.Message("Entered in the fldApplyCSACriteria  field")
        End If
    End If
    End If
'''' chkboxUseMinTeeAllowable
If(chkboxUseMinTeeAllowable  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseMinTeeAllowable.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseMinTeeAllowable.Enabled) Then
          dlgResult.chkboxUseMinTeeAllowable.Click()
          Log.Message("Set 'chkboxUseMinTeeAllowable' checkbox")
        End If
        End If
        End If
'''' chkboxPressCorrForUsrSIF
If(chkboxPressCorrForUsrSIF  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxPressCorrForUsrSIF.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxPressCorrForUsrSIF.Enabled) Then
          dlgResult.chkboxPressCorrForUsrSIF.Click()
          Log.Message("Set 'chkboxPressCorrForUsrSIF' checkbox")
        End If
        End If
        End If
''' chkboxModalTimestepTeeSum
If(chkboxModalTimestepTeeSum  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxModalTimestepTeeSum.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxModalTimestepTeeSum.Enabled) Then
          dlgResult.chkboxModalTimestepTeeSum.Click()
          Log.Message("Set 'chkboxModalTimestepTeeSum' checkbox")
        End If
        End If
        End If
''' chkboxUseResultantMethod
If(chkboxUseResultantMethod  =  "1") Then
        'Write to "Name Of Point" field
       ' If(objNameMapping.WaitAliasChild("dlgResult", 600).WaitProperty("Exists", true, 10)) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseResultantMethod.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.chkboxUseResultantMethod.Enabled) Then
          dlgResult.chkboxUseResultantMethod.Click()
          Log.Message("Set 'chkboxUseResultantMethod' checkbox")
        End If
        End If
        End If
'''' intForce
if( intForce <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldForce.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldForce.Keys(intForce)
         
          Log.Message("Entered in the intForce  field")
        End If
    End If
    End If
    
''' intStress
if( intStress <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldStress.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldStress.Keys()
         
          Log.Message("Entered in the intStress  field")
        End If
    End If
    End If
    
''' intDisp
if( intDisp <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldDisp.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldDisp.Keys(intDisp)
         
          Log.Message("Entered in the fldDisp  field")
        End If
    End If
    End If
    
''' intFreq
if( intFreq <> "NA") Then
'Write to  field
        If(NameMapping.Sys.autopipe.dlgResult.Exists) Then
        if(NameMapping.Sys.autopipe.dlgResult.fldFreq.Enabled)Then
       '' If(objNameMapping.WaitAliasChild("dlgWarning", 6000).WaitProperty("Exists", true, 10)) Then
          dlgResult.fldFreq.Keys(intFreq)
         
          Log.Message("Entered in the fldFreq  field")
        End If
    End If
    End If


objNameMapping.dlgResult.btnOK()


End Sub